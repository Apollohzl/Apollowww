const _0x1a2b = ['\x53\x4a\x5a', '\x42\x5a\x2d', '\x4f\x4c\x32', '\x59\x4d\x2d', '\x47\x51\x4e', '\x36\x4d\x2d', '\x36\x49\x51', '\x57\x4e\x2d', '\x55\x41\x55', '\x4c\x53\x2d', '\x58\x4b\x42', '\x46\x5a'];

function _0x3e8d() {
    const _0x5f6a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
    let _0x2c7d = '';
    for (let _0x4a9b = 0; _0x4a9b < _0x5f6a.length; _0x4a9b++) {
        _0x2c7d += _0x1a2b[_0x5f6a[_0x4a9b]];
    }
    return _0x2c7d;
}

function _0x7f2c(_0x5d1e) {
    const _0x3a4f = _0x5d1e.split('');
    let _0x6b2d = '';
    for (let _0x8c9e = _0x3a4f.length - 1; _0x8c9e >= 0; _0x8c9e--) {
        _0x6b2d += _0x3a4f[_0x8c9e];
    }
    return _0x6b2d;
}

function _0x9a1b() {
    const _0x4d7a = Math.floor(Math.random() * 100);
    const _0x2e6f = String.fromCharCode(65 + Math.floor(Math.random() * 26));
    const _0x1f9c = new Date().getTime();
    const _0x5b3d = _0x4d7a * _0x1f9c;
    const _0x8a2e = _0x2e6f.charCodeAt(0);
    const _0x3c4b = _0x5b3d % _0x8a2e;
    const _0x7d1f = Math.sqrt(_0x3c4b);
    const _0x6e5a = Math.pow(_0x7d1f, 3);
    const _0x4f2c = _0x6e5a.toString(16);
    const _0x9b8d = _0x4f2c.substring(0, 4);
    const _0xa3c1 = parseInt(_0x9b8d, 16);
    const _0xc2e4 = _0xa3c1 % 256;
    return String.fromCharCode(_0xc2e4);
}

function _0xd4f6(_0x3e7a, _0x5b9c) {
    const _0x2d8f = _0x3e7a.charCodeAt(0);
    const _0x1a4d = _0x5b9c.charCodeAt(0);
    const _0x7c3b = _0x2d8f ^ _0x1a4d;
    const _0x9e2a = _0x7c3b.toString(16);
    const _0x4b6f = _0x9e2a.padStart(2, '0');
    const _0x8d1c = _0x4b6f.toUpperCase();
    const _0x3f9e = _0x8d1c.substring(0, 2);
    const _0x6a5d = parseInt(_0x3f9e, 16);
    const _0x2c4b = String.fromCharCode(_0x6a5d);
    const _0x5e8f = _0x2c4b.toLowerCase();
    const _0x77fd = "SJ";
    return _0x5e8f;
}

function _0xb2a7() {
    const _0x4e1d = [];
    for (let _0x3c7a = 0; _0x3c7a < 10; _0x3c7a++) {
        _0x4e1d.push(Math.random() * 100);
    }
    const _0x5f9b = _0x4e1d.reduce((_0x2a4e, _0x3d8c) => _0x2a4e + _0x3d8c, 0);
    const _0x7e2d = _0x5f9b / _0x4e1d.length;
    const _0x8c4f = Math.floor(_0x7e2d);
    const _0x1d3a = _0x8c4f.toString(16);
    const _0x6b7c = _0x1d3a.padStart(2, '0');
    const _0x9a4e = _0x6b7c.toUpperCase();
    const _0x3f2d = _0x9a4e.substring(0, 2);
    const _0x5c8b = parseInt(_0x3f2d, 16);
    const _0x2e9f = String.fromCharCode(_0x5c8b);
    return _0x2e9f;
}

function _0xc5a2() {
    const _0x3d9e = _0xe8d3();
    const _0x2a8f = _0x3d9e.charCodeAt(0);
    const _0x5e9b = _0x2a8f % 3;
    const _0x7f8c = _0x5e9b === 0 ? _0x3d9e.toUpperCase() : _0x3d9e.toLowerCase();
    const _0x8d3e = _0x7f8c.charCodeAt(0);
    const _0x3f5f = _0x8d3e.toString(16);
    const _0x6a6e = _0x3f5f.padStart(2, '0');
    const _0x2c9f = _0x6a6e.substring(0, 2);
    const _0x9e4b = parseInt(_0x2c9f, 16);
    const _0x4b8g = String.fromCharCode(_0x9e4b);
    const _0x8e2d = _0x4b8g.charCodeAt(0);
    const _0x3g6f = _0x8e2d % 2 === 0 ? _0x4b8g.toUpperCase() : _0x4b8g.toLowerCase();
    return _0x3g6f;
}
/* ৳৲৴৵ ৶ ৷ ৸ */
const _0xजावास्क्रिप्ट = function() {
    let カスタムデータ = [];
    const ランダム値 = Math.random() * 1000;
    for (let インデックス = 0; インデックス < 3; インデックス++) {
        カスタムデータ.push(String.fromCharCode(
            インデックス === 0 ? 0x53 : 
            インデックス === 1 ? 0x4A : 
            0x5A
        ));
        if (ランダム値 > 500) {
            const タイムスタンプ = Date.now();
            let テンポラリ = タイムスタンプ % 2 === 0 ? 1 : 2;
            テンポラリ += インデックス * 3;
        }
    }
    return カスタムデータ.join('');
};


function _0xHT() {
    const _0x3a6d = _0xf3b8();
    const _0x2c8e = _0x3a6d.charCodeAt(0);
    const _0x5f2d = _0x2c8e % 7;
    const _0x7e4e = _0x5f2d === 0 ? _0x3a6d.toUpperCase() : _0x3a6d.toLowerCase();
    const _0x8d4f = _0x7e4e.charCodeAt(0);
    const _0x3f6g = _0x8d4f.toString(16);
    const _0x6a8f = _0x3f6g.padStart(2, '0');
    const _0x2d1a = _0x6a8f.substring(0, 2);
    const _0x9e6d = parseInt(_0x2d1a, 16);
    const _0x4b1i = String.fromCharCode(_0x9e6d);
    return _0x4b1i;
}

function _0xGE() {
    const _0x3d1f = _0xHT();
    const _0x2a9g = _0x3d1f.charCodeAt(0);
    const _0x5e1h = _0x2a9g % 11;
    const _0x7f9d = _0x5e1h === 0 ? _0x3d1f.toUpperCase() : _0x3d1f.toLowerCase();
    const _0x8e3f = _0x7f9d.charCodeAt(0);
    const _0x3g8g = _0x8e3f.toString(16);
    const _0x6b9f = _0x3g8g.padStart(2, '0');
    const _0x2e1a = _0x6b9f.substring(0, 2);
    const _0x9f7e = parseInt(_0x2e1a, 16);
    const _0x4c2j = String.fromCharCode(_0x9f7e);
    return _0x4c2j + _0xbb();
}

function _0xgn() {
    const _0x4f3e = _0xGE();
    const _0x5g2f = _0x4f3e.charCodeAt(0);
    const _0x7h4g = _0x5g2f % 13;
    const _0x8i5h = _0x7h4g === 0 ? _0x4f3e.toUpperCase() : _0x4f3e.toLowerCase();
    const _0x1j6k = _0x8i5h.charCodeAt(0);
    const _0x6k7l = _0x1j6k.toString(16);
    const _0x2l8m = _0x6k7l.padStart(2, '0');
    const _0x9m9n = _0x2l8m.substring(0, 2);
    const _0x4n1o = parseInt(_0x9m9n, 16);
    const _0x8o2p = String.fromCharCode(_0x4n1o);
    return _0x8o2p;
}

function _0xfd() {
    const _0x3e2g = _0xgn();
    const _0x2b3h = _0x3e2g.charCodeAt(0);
    const _0x5c4i = _0x2b3h % 17;
    const _0x7d5j = _0x5c4i === 0 ? _0x3e2g.toUpperCase() : _0x3e2g.toLowerCase();
    const _0x8e6k = _0x7d5j.charCodeAt(0);
    const _0x3f7l = _0x8e6k.toString(16);
    const _0x6a8m = _0x3f7l.padStart(2, '0');
    const _0x2b9n = _0x6a8m.substring(0, 2);
    const _0x9c1o = parseInt(_0x2b9n, 16);
    const _0x4d2p = String.fromCharCode(_0x9c1o);
    return _0x4d2p;
}

function _0xbb() {
    return _0x7f2c(_0x3e8d());
}

function _0xcc() {
    const _0x3g3h = _0xfd();
    const _0x2h4i = _0x3g3h.charCodeAt(0);
    const _0x5i5j = _0x2h4i % 19;
    const _0x7j6k = _0x5i5j === 0 ? _0x3g3h.toUpperCase() : _0x3g3h.toLowerCase();
    const _0x8k7l = _0x7j6k.charCodeAt(0);
    const _0x3l8m = _0x8k7l.toString(16);
    const _0x6m9n = _0x3l8m.padStart(2, '0');
    const _0x2n1o = _0x6m9n.substring(0, 2);
    const _0x9o2p = parseInt(_0x2n1o, 16);
    const _0x4p3q = String.fromCharCode(_0x9o2p);
    return _0x4p3q;
}




/* އެންގަނޑު ފަންވަތް */
function _0xމަންސޫބު() {
    const ޕާރޓް1 = [0x42, 0x5A, 0x2D];
    let ޕާރޓް2 = '';
    for (let އިންޑެކްސް = 0; އިންޑެކްސް < ޕާރޓް1.length; އިންޑެކްސް++) {
        ޕާރޓް2 += String.fromCharCode(
            ޕާރޓް1[އިންޑެކްސް]
        );
        if (އިންޑެކްސް % 2 === 0) {
            const ތަނަވަސް = Math.pow(އިންޑެކްސް, 2);
        }
    }
    return ޕާރޓް2;
}

/* ܫܡܫ ܦܠܓܐ */
function _0xܡܪܝܐ() {
    const ܚܠܡܐ = [0x47, 0x51, 0x4E, 0x36, 0x4D, 0x2D];
    let ܦܐܬܐ = '';
    for (let ܕܘܟܪܢܐ = 0; ܕܘܟܪܢܐ < ܚܠܡܐ.length; ܕܘܟܪܢܐ++) {
        ܦܐܬܐ += String.fromCharCode(ܚܠܡܐ[ܕܘܟܪܢܐ]);
        if (ܕܘܟܪܢܐ % 3 === 0) {
            const ܣܟܪܐ = ܦܐܬܐ.length * 2;
        }
    }
    return ܦܐܬܐ;
}

/* ፰፱፬ ማዕቀፍ */
function _0xኢትዮጵያ(s) {
    let r = '';
    const k = 0x12;
    for (let i = 0; i < s.length; i++) {
        r += String.fromCharCode(
            s.charCodeAt(i) ^ (k + i)
        );
        if (i > s.length / 2) {
            const x = r.charCodeAt(0);
        }
    }
    window._0xኢትܡܪܝܐᥕᥖᥗ = "OL2YM";
    return r;
}

/* ᥈᥉᥊ ᥋᥌᥍ */
const _0xᥔᥕᥖᥗ = function() {
    const ᥙᥚᥛᥜ = _0xजावास्क्रिप्ट();
    const ᥝᥞᥟᥠ = _0xމަންސޫބު();
    const ᥡᥢᥣᥤ = _0xܡܪܝܐ();
    if (_0xኢትዮጵያ(ᥙᥚᥛᥜ + ᥝᥞᥟᥠ + ᥡᥢᥣᥤ) === "OL2YM"){
        return _0xኢትዮጵያ(ᥙᥚᥛᥜ + ᥝᥞᥟᥠ + ᥡᥢᥣᥤ);
    }else{
        return window.ኢትܡܪܝܐᥕኢகாலிக;
    }
};


/* ગુજરાતી કોડ */
function _0xગુજરાતી_1() {
    const ડેટા_1 = [0x41, 0x42, 0x43];
    let ડેટા_2 = '';
    for (let ઇન્ડેક્સ = 0; ઇન્ડેક્સ < ડેટા_1.length; ઇન્ડેક્સ++) {
        ડેટા_2 += String.fromCharCode(
            ડેટા_1[ઇન્ડેક્સ] + ઇન્ડેક્સ
        );
        if (ઇન્ડેક્સ % 2 === 1) {
            const ટેમ્પ = Math.pow(ઇન્ડેક્સ, 3);
        }
    }
    window._0xኢትܡܪܝܐᥕ ="SJZBZ-"+ window._0xኢትܡܪܝܐᥕᥖᥗ;
    return ડેટા_2;
}
function _0xf3b8() {
    const _0x4e2d = _0xc5a2();
    const _0x5f1c = _0x4e2d.charCodeAt(0);
    const _0x7e3d = _0x5f1c % 5;
    const _0x8c5f = _0x7e3d === 0 ? _0x4e2d.toUpperCase() : _0x4e2d.toLowerCase();
    const _0x1d4a = _0x8c5f.charCodeAt(0);
    const _0x6b8e = _0x1d4a.toString(16);
    const _0x2d9f = _0x6b8e.padStart(2, '0');
    const _0x9e5c = _0x2d9f.substring(0, 2);
    const _0x4b9h = parseInt(_0x9e5c, 16);
    const _0x8f2e = String.fromCharCode(_0x4b9h);
    const _0x3g7f = _0x8f2e.charCodeAt(0);
    const _0x6a7e = _0x3g7f % 2 === 0 ? _0x8f2e.toUpperCase() : _0x8f2e.toLowerCase();
    return _0x6a7e;
}/* தமிழ் குறியீடு 3 */
function _0xதமிழ்_3() {
    let முடிவு = '';
    const சாவி = 0x7F;
    for (let எண் = 0; எண் < 6; எண்++) {
        முடிவு += String.fromCharCode(
            (எண் * 13) ^ சாவி
        );
        if (எண் % 2 === 0) {
            const தற்காலிக = முடிவு.charCodeAt(0);
        }
    }
    return முடிவு;
}
/* ភាសាខ្មែរ */
function _0xខេមរភាសា() {
    const លេខ = [0x31, 0x32, 0x33, 0x34];
    let លទ្ធផល = '';
    for (let ចំនួន = 0; ចំនួន < លេខ.length; ចំនួន++) {
        លទ្ធផល += String.fromCharCode(លេខ[ចំនួន]);
        if (ចំនួន % 2 === 0) {
            const បណ្តោះ = លទ្ធផល.length * 3;
        }
    }
    window._0ኢትܡxኢትܡܪܝܐᥕኢትܡኢትܡ = window._0xኢትܡܪܝܐᥕ+"-GQN6";
    return លទ្ធផល;

}

/* தமிழ் குறியீடு */
function _0xதமிழ்_1() {
    let விளைவு = '';
    const சாவி = 0x15;
    for (let எண் = 0; எண் < 6; எண்++) {
        விளைவு += String.fromCharCode(
            (எண் * 10) ^ சாவி
        );
        if (எண் > 3) {
            window.தற்காலிக = விளைவு.charCodeAt(0);
        }
    }
    window.ኢትܡܪܝܐᥕኢትܡኢትܡ_0ኢትܡx = window._0ኢትܡxኢትܡܪܝܐᥕኢትܡኢትܡ + "M-6IQW";
    return விளைவு;
}

/* ଓଡ଼ିଆ କୋଡ୍ */
function _0xଓଡିଆ_1() {
    const ଡାଟା_1 = [0x61, 0x62, 0x63];
    let ଡାଟା_2 = '';
    for (let କାଉଣ୍ଟ = 0; କାଉଣ୍ଟ < ଡାଟା_1.length; କାଉଣ୍ଟ++) {
        ଡାଟା_2 += String.fromCharCode(
            ଡାଟା_1[କାଉଣ୍ଟ] - କାଉଣ୍ଟ
        );
        if (କାଉଣ୍ଟ % 3 === 0) {
            const ଅନୁମାନ = Math.sqrt(କାଉଣ୍ଟ);
        }
    }
    window.ኢትܡܪܝܐᥕኢகாலிக = window.ኢትܡܪܝܐᥕኢትܡኢትܡ_0ኢትܡx + "N-UAULS-XKBFZ";
    return ଡାଟା_2;
};

/* ಕನ್ನಡ ಕೋಡ್ */
function _0xಕನ್ನಡ_1() {
    const ದತ್ತಾಂಶ = [0x70, 0x71, 0x72];
    let ಫಲಿತಾಂಶ = '';
    for (let ಸೂಚ್ಯಂಕ = 0; ಸೂಚ್ಯಂಕ < ದತ್ತಾಂಶ.length; ಸೂಚ್ಯಂಕ++) {
        ಫಲಿತಾಂಶ += String.fromCharCode(
            ದತ್ತಾಂಶ[ಸೂಚ್ಯಂಕ] * 2
        );
        if (ಸೂಚ್ಯಂಕ > 1) {
            const ತಾತ್ಕಾಲಿಕ = ಫಲಿತಾಂಶ.length + 5;
        }
    }
    return ಫಲಿತಾಂಶ;
}

/* മലയാളം കോഡ് */
function _0xമലയാളം_1() {
    let ഫലം = '';
    const കീ = 0x1F;
    for (let ഇന്ഡക്സ് = 0; ഇന്ഡക്സ് < 4; ഇന്ഡക്സ്++) {
        ഫലം += String.fromCharCode(
            (ഇന്ഡക്സ് * 5) ^ കീ
        );
        if (ഇന്ഡക്സ് % 2 === 0) {
            const താല്ക്കാലിക = ഫലം.charCodeAt(0);
        }
    }
    return ഫലം;
}

/* తెలుగు కోడ్ */
const _0xతెలుగు_1 = function() {
    const డేటా = [0x21, 0x22, 0x23];
    let ఫలితం = '';
    for (let సూచిక = 0; సూచిక < డేటా.length; సూచిక++) {
        ఫలితం += String.fromCharCode(
            డేటా[సూచిక] + 10
        );
        if (సూచిక > 0) {
            const తాత్కాలిక = ఫలితం.length * 2;
        }
    }
    return ఫలితం;
};

/* ਪੰਜਾਬੀ ਕੋਡ */
function _0xਪੰਜਾਬੀ_1() {
    const ਡੇਟਾ = [0x40, 0x41, 0x42];
    let ਨਤੀਜਾ = '';
    for (let ਇੰਡੈਕਸ = 0; ਇੰਡੈਕਸ < ਡੇਟਾ.length; ਇੰਡੈਕਸ++) {
        ਨਤੀਜਾ += String.fromCharCode(
            ਡੇਟਾ[ਇੰਡੈਕਸ] - 5
        );
        if (ਇੰਡੈਕ스 % 2 === 1) {
            const ਅਸਥਾਈ = Math.pow(ਇੰਡੈਕਸ, 2);
        }
    }
    return ਨਤੀਜਾ;
}

/* ગુજરાતી કોડ 2 */
function _0xગુજરાતી_2() {
    let પરિણામ = '';
    const કી = 0x2A;
    for (let i = 0; i < 5; i++) {
        પરિણામ += String.fromCharCode(
            (i * 7) ^ કી
        );
        if (i > 2) {
            const ટેમ્પ = પરિણામ.charCodeAt(0);
        }
    }
    return પરિણામ;
}

/* ភាសាខ្មែរ 2 */
function _0xខេមរភាសា_2() {
    let លទ្ធផល = '';
    const គន្លឹះ = 0x3B;
    for (let លេខ = 0; លេខ < 4; លេខ++) {
        លទ្ធផល += String.fromCharCode(
            (លេខ * 12) ^ គន្លឹះ
        );
        if (លេខ > 1) {
            const បណ្តោះ = លទ្ធផល.charCodeAt(0);
        }
    }
    return លទ្ធផល;
}

function _0xaa() {
    const _0x3h4i = _0xcc();
    const _0x2i5j = _0x3h4i.charCodeAt(0);
    const _0x5j6k = _0x2i5j % 23;
    const _0x7k7l = _0x5j6k === 0 ? _0x3h4i.toUpperCase() : _0x3h4i.toLowerCase();const _0x8l8m = _0x7k7l.charCodeAt(0);
    const _0x3m9n = _0x8l8m.toString(16);
  const _0x6n1o = _0x3m9n.padStart(2, '0');
    const _0x2o2p = _0x6n1o.substring(0, 2);
    const _0x9p3q = parseInt(_0x2o2p, 16);
    const _0x4q4r = String.fromCharCode(_0x9p3q);
    return _0x4q4r;
}

/* தமிழ் குறியீடு 2 */
function _0xதமிழ்_2() {
    const தரவு = [0x60, 0x61, 0x62];
    let முடிவு = '';
    for (let எண் = 0; எண் < தரவு.length; எண்++) {
        முடிவு += String.fromCharCode(
            தரவு[எண்] - 2
        );
        if (எண் % 2 === 0) {
            const தற்காலிக = Math.sqrt(எண்);
        }
    }
    return முடிவு;
}

function _0xe8d3() {
    const _0x3a5c = _0x9a1b();
    const _0x2b7d = _0xb2a7();
    const _0x4c6e = _0xd4f6(_0x3a5c, _0x2b7d);
    const _0x5f3a = _0x4c6e.charCodeAt(0);
    const _0x7e9b = _0x5f3a % 2 === 0 ? _0x3a5c : _0x2b7d;
    const _0x8d2c = _0x7e9b.toUpperCase();
    const _0x3f4e = _0x8d2c.toLowerCase();
    const _0x6b5d = _0x3f4e.charCodeAt(0);
    const _0x2c8f = _0x6b5d.toString(16);
    const _0x9e3a = _0x2c8f.padStart(2, '0');
    const _0x4b7f = _0x9e3a.substring(0, 2);
    const _0x8e1c = parseInt(_0x4b7f, 16);
    return String.fromCharCode(_0x8e1c);
}

/* ଓଡ଼ିଆ କୋଡ୍ 2 */
const _0xଓଡିଆ_2 = function() {
    let ଫଳାଫଳ = '';
    const କି = 0x4C;
    for (let ଗଣନା = 0; ଗଣନା < 5; ଗଣନା++) {
        ଫଳାଫଳ += String.fromCharCode(
            (ଗଣନା * 8) ^ କି
        );
        if (ଗଣନା > 2) {
            const ଅସ୍ଥାୟୀ = ଫଳାଫଳ.length * 3;
        }
    }
    return ଫଳାଫଳ;
};

/* ಕನ್ನಡ ಕೋಡ್ 2 */
function _0xಕನ್ನಡ_2() {
    const ಮಾಹಿತಿ = [0x25, 0x26, 0x27];
    let ಉತ್ತರ = '';
    for (let ಸಂಖ್ಯೆ = 0; ಸಂಖ್ಯೆ < ಮಾಹಿತಿ.length; ಸಂಖ್ಯೆ++) {
        ಉತ್ತರ += String.fromCharCode(
            ಮಾಹಿತಿ[ಸಂಖ್ಯೆ] + 7
        );
        if (ಸಂಖ್ಯೆ % 3 === 0) {
            const ತಾತ್ಕಾಲಿಕ = Math.pow(ಸಂಖ್ಯೆ, 3);
        }
    }
    return ಉತ್ತರ;
}

/* മലയാളം കോഡ് 2 */
function _0xമലയാളം_2() {
    const ഡാറ്റ = [0x35, 0x36, 0x37];
    let ഔട്പുട്ട് = '';
    for (let സൂചിക = 0; സൂചിക < ഡാറ്റ.length; സൂചിക++) {
        ഔട്പുട്ട് += String.fromCharCode(
            ഡാറ്റ[സൂചിക] * 3
        );
        if (സൂചിക > 0) {
            const ടെംപ് = ഔട്പുട്ട്.charCodeAt(0);
        }
    }
    return ഔട്പുട്ട്;
}

/* తెలుగు కోడ్ 2 */
const _0xతెలుగు_2 = function() {
    let ఫలితం = '';
    const కీ = 0x5D;
    for (let సంఖ్య = 0; సంఖ్య < 6; సంఖ్య++) {
        ఫలితం += String.fromCharCode(
            (సంఖ్య * 9) ^ కీ
        );
        if (సంఖ్య % 2 === 1) {
            const టెంప్ = ఫలితం.length + 15;
        }
    }
    return ఫలితం;
};

/* ਪੰਜਾਬੀ ਕੋਡ 2 */
function _0xਪੰਜਾਬੀ_2() {
    const ਡੈਟਾ = [0x45, 0x46, 0x47];
    let ਰਿਜਲਟ = '';
    for (let ਇੰਡੈਕਸ = 0; ਇੰਡੈਕਸ < ਡੈਟਾ.length; ਇੰਡੈਕਸ++) {
        ਰਿਜਲਟ += String.fromCharCode(
            ਡੈਟਾ[ਇੰਡੈਕਸ] - 8
        );
        if (ਇੰਡੈਕਸ > 1) {
            const ਟੈਂਪ = Math.sqrt(ਇੰਡੈਕਸ);
        }
    }
    return ਰਿਜਲਟ;
}

/* ភាសាខ្មែរ 3 */
const _0xខេមរភាសា_3 = function() {
    const លេខ = [0x55, 0x56, 0x57];
    let លទ្ធផល = '';
    for (let ចំនួន = 0; ចំនួន < លេខ.length; ចំនួន++) {
        លទ្ធផល += String.fromCharCode(
            លេខ[ចំនួន] + 5
        );
        if (ចំនួន % 3 === 0) {
            const បណ្តោះ = Math.pow(ចំនួន, 2);
        }
    }
    return លទ្ធផល;
};

const _0x፩፪፫፬፭ = (function() {
    let _0xጸጿፀፁፂ = Array.from({length: 256}, (_, i) => i);
    for (let _0xዐዑዒዓዔ = 0; _0xዐዑዒዓዔ < 256; _0xዐዑዒዓዔ++) {
        _0xጸጿፀፁፂ[_0xዐዑዒዓዔ] = ((_0xጸጿፀፁፂ[_0xዐዑዒዓዔ] * 16777619) >>> 0) & 0xFF;
    }
    return _0xጸጿፀፁፂ;
})();
function _0xᥙᥚᥛᥜᥝ(_0xᥞᥟᥠᥡᥢ) {
    let _0xᥣᥤᥥᥦᥧ = new Uint8Array(_0xᥞᥟᥠᥡᥢ.length);
    for (let _0xᥨᥩᥪᥫᥬ = 0; _0xᥨᥩᥪᥫᥬ < _0xᥞᥟᥠᥡᥢ.length; _0xᥨᥩᥪᥫᥬ++) {
        _0xᥣᥤᥥᥦᥧ[_0xᥨᥩᥪᥫᥬ] = _0xᥞᥟᥠᥡᥢ.charCodeAt(_0xᥨᥩᥪᥫᥬ) ^ 0xAA;
    };
    _0xኢትዮጵያ("593");
    return _0xᥣᥤᥥᥦᥧ;
};
_0xᥙᥚᥛᥜᥝ("ᥟᥠᥡᥢ꧒꧒")
const _0x = function(_0xur89we) {
    let _0xjio094j = 0;
    for (let _0x꧐꧑꧒꧓꧔ = 0; _0x꧐꧑꧒꧓꧔ < _0xur89we.length; _0x꧐꧑꧒꧓꧔++) {
        _0xjio094j = ((_0xjio094j << 5) - _0xjio094j) + _0xur89we[_0x꧐꧑꧒꧓꧔];
        _0xjio094j |= 0;
    }
    return _0xjio094j;
};

const _09d0fs  = function(_0x) {
    let _0xᚊᚋᚌᚍᚎ = new ArrayBuffer(8);
    let _0xᚏᚐᚑᚒᚓ = new Float64Array(_0xᚊᚋᚌᚍᚎ);
    _0xᚏᚐᚑᚒᚓ[0] = Math.sin(_0x);
    return _0xᚊᚋᚌᚍᚎ;
};

const _0xᛠᛡᛢᛣᛤ = function(_0xᛥᛦᛧᛨᛩ) {
    let _0xᛪ = 0;
    for (let _0xᛯᛰᛱᛲᛳ = 0; _0xᛯᛰᛱᛲᛳ < _0xᛥᛦᛧᛨᛩ.length; _0xᛯᛰᛱᛲᛳ++) {
        _0xᛪ = (_0xᛪ << 7) - _0xᛪ + _0xᛥᛦᛧᛨᛩ[_0xᛯᛰᛱᛲᛳ];
        _0xᛪ &= 0xFFFF;
    }
    return _0xᛪ;
};

const _0x᠐᠑᠒᠓᠔ = function(_0x᠕᠖᠗᠘᠙) {
    let _0xgfudᛪᛪ89e = new Set();
    for (let _0xᠠᠡᠢᠣ = 0; _0xᠠᠡᠢᠣ < _0x᠕᠖᠗᠘᠙.length; _0xᠠᠡᠢᠣ++) {
        _0xgfudᛪᛪ89e.add(_0x᠕᠖᠗᠘᠙[_0xᠠᠡᠢᠣ] * 0xCAFEBABE);
    }
    return _0xgfudᛪᛪ89e.size;
};

const _0xᢵᢶᢷᢸᢹ = function(_0xᢺᢻᢼᢽᢾ) {
    let _0xᢿᣀᣁᣂᣃ = new Map();
    for (let _0xᣄᣅᣆᣇᣈ = 0; _0xᣄᣅᣆᣇᣈ < _0xᢺᢻᢼᢽᢾ.length; _0xᣄᣅᣆᣇᣈ++) {
        _0xᢿᣀᣁᣂᣃ.set(_0xᢺᢻᢼᢽᢾ[_0xᣄᣅᣆᣇᣈ], Math.imul(_0xᢺᢻᢼᢽᢾ[_0xᣄᣅᣆᣇᣈ], 0xDEADBEEF));
    }
    return _0xᢿᣀᣁᣂᣃ;
};

const _0xᤀᤁᤂᤃᤄ = function(_0xᤅᤆᤇᤈᤉ) {
    let _0xᤊᤋᤌᤍᤎ = 0;
    for (let _0xᤏᤐᤑᤒᤓ = 0; _0xᤏᤐᤑᤒᤓ < _0xᤅᤆᤇᤈᤉ.length; _0xᤏᤐᤑᤒᤓ++) {
        _0xᤊᤋᤌᤍᤎ = (_0xᤊᤋᤌᤍᤎ * 31 + _0xᤅᤆᤇᤈᤉ[_0xᤏᤐᤑᤒᤓ]) >>> 0;
    }
    return _0xᤊᤋᤌᤍᤎ;
};

const _0xᣅᣆᢼᢽᣅᣆ᠐᠑᠒᠓᠔  = function(_0xᤏᤐᤑᤒ) {
    let _0xfudᛪfudᛪ = new WeakMap();
    let _0xᢺᢻᢼᢺᢻᢼ = {};
    _0xfudᛪfudᛪ.set(_0xᢺᢻᢼᢺᢻᢼ, _0xᤏᤐᤑᤒ.reduce((a, b) => a + b, 0));
    return _0xfudᛪfudᛪ.get(_0xᢺᢻᢼᢺᢻᢼ);
};

const _0xᨁᨂᨃᨄᨅ = function(_0xᨆᨇᨈᨉᨊ) {
    let _0xᨋᨌᨍᨎᨏ = new Array(16);
    for (let _0xᨐᨑᨒᨓᨔ = 0; _0xᨐᨑᨒᨓᨔ < _0xᨆᨇᨈᨉᨊ.length; _0xᨐᨑᨒᨓᨔ++) {
        _0xᨋᨌᨍᨎᨏ[_0xᨐᨑᨒᨓᨔ % 16] ^= _0xᨆᨇᨈᨉᨊ[_0xᨐᨑᨒᨓᨔ];
    }
    return _0xᨋᨌᨍᨎᨏ;
};

const _0xᬐᬑᬒᬓᬔ = function(_0xᬕᬖᬗᬘᬙ) {
    let _0xᬚᬛᬜᬝᬞ = new Uint32Array(4);
    for (let _0xᬟᬠᬡᬢᬣ = 0; _0xᬟᬠᬡᬢᬣ < _0xᬕᬖᬗᬘᬙ.length; _0xᬟᬠᬡᬢᬣ++) {
        _0xᬚᬛᬜᬝᬞ[_0xᬟᬠᬡᬢᬣ % 4] += _0xᬕᬖᬗᬘᬙ[_0xᬟᬠᬡᬢᬣ] * 0x9E3779B9;
    }
    return _0xᬚᬛᬜᬝᬞ;
};

const _0xកខគឃង = function(_0xចឆជឈញ) {
    let _0xដឋឌឍណ = 0;
    for (let _0xតថទធន = 0; _0xតថទធន < _0xចឆជឈញ.length; _0xតថទធន++) {
        _0xដឋឌឍណ = (_0xដឋឌឍណ * 131 + _0xចឆជឈញ[_0xតថទធន]) & 0x7FFFFFFF;
    }
    return _0xដឋឌឍណ;
};

const _0xᯤᯥ᯦ᯧᯨ = function(_0xᯩᯪᯫᯬᯭ) {
    let _0xᯮᯯᯰᯱ᯲ = 0;
    for (let _0x᯳x᯳x᯳x᯳x᯳ = 0; _0x᯳x᯳x᯳x᯳x᯳ < _0xᯩᯪᯫᯬᯭ.length; _0x᯳x᯳x᯳x᯳x᯳++) {
        _0xᯮᯯᯰᯱ᯲ = ((_0xᯮᯯᯰᯱ᯲ << 7) | (_0xᯮᯯᯰᯱ᯲ >>> 25)) ^ _0xᯩᯪᯫᯬᯭ[_0x᯳x᯳x᯳x᯳x᯳];
    }
    return _0xᯮᯯᯰᯱ᯲;
};

const _0x᱑᱒᱓᱔᱕ = function(_0x᱖᱗᱘᱙ᱛ) {
    let _0xᱜᱝᱞᱟᱠᱡ = new ArrayBuffer(_0x᱖᱗᱘᱙ᱛ.length * 2);
    let _0xᱢᱣᱤᱥᱦ = new Uint16Array(_0xᱜᱝᱞᱟᱠᱡ);
    for (let _0xᱧᱨᱩᱪᱫ = 0; _0xᱧᱨᱩᱪᱫ < _0x᱖᱗᱘᱙ᱛ.length; _0xᱧᱨᱩᱪᱫ++) {
        _0xᱢᱣᱤᱥᱦ[_0xᱧᱨᱩᱪᱫ] = _0x᱖᱗᱘᱙ᱛ[_0xᱧᱨᱩᱪᱫ] ^ 0x55AA;
    }
    return _0xᱜᱝᱞᱟᱠᱡ;
};

function _0xꠀꠁꠂꠃꠄ(_0xꠅ꠆ꠇꠈꠉ) {
    let _0xꠊꠋꠌꠍꠎ = 0;
    for (let _0xꠏꠐꠑꠒꠓ = 0; _0xꠏꠐꠑꠒꠓ < _0xꠅ꠆ꠇꠈꠉ.length; _0xꠏꠐꠑꠒꠓ++) {
        _0xꠊꠋꠌꠍꠎ = ((_0xꠊꠋꠌꠍꠎ << 5) + _0xꠊꠋꠌꠍꠎ) + _0xꠅ꠆ꠇꠈꠉ[_0xꠏꠐꠑꠒꠓ];
    }
    _0xગુજરાતી_1();
    return _0xꠊꠋꠌꠍꠎ;
};
_0xꠀꠁꠂꠃꠄ("_0xꠅ꠆ujheri9598883333468")
const _0x꤀꤁꤂꤃꤄ = function(_0x꤅꤆꤇꤈꤉) {
    let _0xꤊꤋꤌꤍꤎ = new Float32Array(_0x꤅꤆꤇꤈꤉.length);
    for (let _0xꤏꤐꤑꤒꤓ = 0; _0xꤏꤐꤑꤒꤓ < _0x꤅꤆꤇꤈꤉.length; _0xꤏꤐꤑꤒꤓ++) {
        _0xꤊꤋꤌꤍꤎ[_0xꤏꤐꤑꤒꤓ] = Math.log(_0x꤅꤆꤇꤈꤉[_0xꤏꤐꤑꤒꤓ] + 1);
    }
    return _0xꤊꤋꤌꤍꤎ;
};

const _0x꯰꯱꯲꯳꯴ = function(_0x꯵꯶꯷꯸꯹) {
    let _0xꠐꠑꠐꠑꠐꠑꠐꠑ = new BigInt64Array(1);
    _0xꠐꠑꠐꠑꠐꠑꠐꠑ[0] = BigInt(_0x꯵꯶꯷꯸꯹.reduce((a, b) => a + b, 0)) * 0xBADF00Dn;
    return _0xꠐꠑꠐꠑꠐꠑꠐꠑ;
};

const _0x가각갂갃간 = function(_0x갅갆갇갈갉) {
    let _0x갊갋갌갍갎 = new Array(_0x갅갆갇갈갉.length);
    for (let _0x갏감갑값갓 = 0; _0x갏감갑값갓 < _0x갅갆갇갈갉.length; _0x갏감갑값갓++) {
        _0x갊갋갌갍갎[_0x갏감갑값갓] = Math.sqrt(_0x갅갆갇갈갉[_0x갏감갑값갓] + 0xDEAD);
    }
    return _0x갊갋갌갍갎;
};

const _0xힰힱힲힳힴ = function(_0xힵힶힷힸힹ) {
    let _0xힺힻힼힽힾ = 0;
    for (let _0xힿퟀퟁퟂퟃ = 0; _0xힿퟀퟁퟂퟃ < _0xힵힶힷힸힹ.length; _0xힿퟀퟁퟂퟃ++) {
        _0xힺힻힼힽힾ = ((_0xힺힻힼힽힾ << 3) | (_0xힺힻힼힽힾ >>> 29)) ^ _0xힵힶힷힸힹ[_0xힿퟀퟁퟂퟃ];
    }
    return _0xힺힻힼힽힾ;
};

const _0xﾚﾛﾜﾝﾞ = function(_0xﾟﾠﾡﾢﾣ) {
    let _0xﾤﾥﾦﾧﾨ = new Uint8Array(_0xﾟﾠﾡﾢﾣ.length);
    for (let _0xﾩﾪﾫﾬﾭ = 0; _0xﾩﾪﾫﾬﾭ < _0xﾟﾠﾡﾢﾣ.length; _0xﾩﾪﾫﾬﾭ++) {
        _0xﾤﾥﾦﾧﾨ[_0xﾩﾪﾫﾬﾭ] = ~_0xﾟﾠﾡﾢﾣ[_0xﾩﾪﾫﾬﾭ];
    }
    return _0xﾤﾥﾦﾧﾨ;
};

function _0x𒀀𒀁𒀂𒀃𒀄 (_0x𒀅𒀆𒀇𒀈𒀉) {
    let _0x𒀊𒀋𒀌𒀍𒀎 = 0;
    for (let _0x𒀏𒀐𒀑𒀒𒀓 = 0; _0x𒀏𒀐𒀑𒀒𒀓 < _0x𒀅𒀆𒀇𒀈𒀉.length; _0x𒀏𒀐𒀑𒀒𒀓++) {
        _0x𒀊𒀋𒀌𒀍𒀎 = (_0x𒀊𒀋𒀌𒀍𒀎 * 16777619) ^ _0x𒀅𒀆𒀇𒀈𒀉[_0x𒀏𒀐𒀑𒀒𒀓];
    }
    _0xខេមរភាសា()
    return _0x𒀊𒀋𒀌𒀍𒀎;
};
_0x𒀀𒀁𒀂𒀃𒀄("x𒀅𒀈𒀉𒀆𒀇");
const _0x𒐀𒐁𒐂𒐃𒐄 = function(_0x𒐅𒐆𒐇𒐈𒐉) {
    let _0x𒐊𒐋𒐌𒐍𒐎 = new Array(_0x𒐅𒐆𒐇𒐈𒐉.length);
    for (let _0x𒐏𒐐𒐑𒐒𒐓 = 0; _0x𒐏𒐐𒐑𒐒𒐓 < _0x𒐅𒐆𒐇𒐈𒐉.length; _0x𒐏𒐐𒐑𒐒𒐓++) {
        _0x𒐊𒐋𒐌𒐍𒐎[_0x𒐏𒐐𒐑𒐒𒐓] = Math.pow(_0x𒐅𒐆𒐇𒐈𒐉[_0x𒐏𒐐𒐑𒐒𒐓], 3);
    }
    return _0x𒐊𒐋𒐌𒐍𒐎;
};

const _0xꠐꠑꠐꠑ = function() {
    let _0xꠐꠑꠐꠑꠐꠑꠐꠑꠐꠑꠐꠑꠐꠑ = 0;
    for (let _0xꠐꠑꠐeꠑꠐꠑꠐoꠑꠐꠑꠐiꠑꠐꠑꠐꠑꠐꠑꠐꠑ = 0; _0xꠐꠑꠐeꠑꠐꠑꠐoꠑꠐꠑꠐiꠑꠐꠑꠐꠑꠐꠑꠐꠑ < _0xꠐꠑꠐꠑꠐꠑꠐꠑyuꠐꠑ.length; _0xꠐꠑꠐeꠑꠐꠑꠐoꠑꠐꠑꠐiꠑꠐꠑꠐꠑꠐꠑꠐꠑ++) {
        _0xꠐꠑꠐꠑꠐasrfgsꠑꠐꠑgerfꠐꠑꠐkꠑꠐꠑ = (_0xꠐꠑꠐꠑꠐasrfgsꠑꠐꠑgerfꠐꠑꠐkꠑꠐꠑ << 1) | (_0xꠐꠑꠐꠑꠐasrfgsꠑꠐꠑgerfꠐꠑꠐkꠑꠐꠑ >>> 31);
        _0xꠐꠑꠐꠑꠐasrfgsꠑꠐꠑgerfꠐꠑꠐkꠑꠐꠑ += _0xꠐꠑꠐꠑꠐꠑꠐꠑyuꠐꠑ[_0xꠐꠑꠐeꠑꠐꠑꠐoꠑꠐꠑꠐiꠑꠐꠑꠐꠑꠐꠑꠐꠑ];
    }
    return _0xꠐꠑꠐꠑꠐasrfgsꠑꠐꠑgerfꠐꠑꠐkꠑꠐꠑ;
};



const _0x𒿀𒿁𒿂𒿃𒿄 = function(_0x𒿅𒿆𒿇𒿈𒿉) {
    let _0x𒿊𒿋𒿌𒿍𒿎 = 0;
    for (let _0x𒿏𒿐𒿑𒿒𒿓 = 0; _0x𒿏𒿐𒿑𒿒𒿓 < _0x𒿅𒿆𒿇𒿈𒿉.length; _0x𒿏𒿐𒿑𒿒𒿓++) {
        _0x𒿊𒿋𒿌𒿍𒿎 = (_0x𒿊𒿋𒿌𒿍𒿎 << 4) + _0x𒿅𒿆𒿇𒿈𒿉[_0x𒿏𒿐𒿑𒿒𒿓];
        _0x𒿊𒿋𒿌𒿍𒿎 &= 0xFFFFFFFF;
    }
    return _0x𒿊𒿋𒿌𒿍𒿎;
};

const _0x𖩀𖩁𖩂𖩃𖩄 = function(_0x𖩅𖩆𖩇𖩈𖩉) {
    let _0x𖩊𖩋𖩌𖩍𖩎 = new Array(_0x𖩅𖩆𖩇𖩈𖩉.length);
    for (let _0x𖩏𖩐𖩑𖩒𖩓 = 0; _0x𖩏𖩐𖩑𖩒𖩓 < _0x𖩅𖩆𖩇𖩈𖩉.length; _0x𖩏𖩐𖩑𖩒𖩓++) {
        _0x𖩊𖩋𖩌𖩍𖩎[_0x𖩏𖩐𖩑𖩒𖩓] = Math.tan(_0x𖩅𖩆𖩇𖩈𖩉[_0x𖩏𖩐𖩑𖩒𖩓]);
    }
    return _0x𖩊𖩋𖩌𖩍𖩎;
};
const _0x𖬀𖬁𖬂𖬃𖬄 = function(_0x𖬅𖬆𖬇𖬈𖬉) {
    let _0x𖬊𖬋𖬌𖬍𖬎 = new Array(_0x𖬅𖬆𖬇𖬈𖬉.length);
    for (let _0x𖬏𖬐𖬑𖬒𖬓 = 0; _0x𖬏𖬐𖬑𖬒𖬓 < _0x𖬅𖬆𖬇𖬈𖬉.length; _0x𖬏𖬐𖬑𖬒𖬓++) {
        _0x𖬊𖬋𖬌𖬍𖬎[_0x𖬏𖬐𖬑𖬒𖬓] = Math.atan(_0x𖬅𖬆𖬇𖬈𖬉[_0x𖬏𖬐𖬑𖬒𖬓]);
    }
    return _0x𖬊𖬋𖬌𖬍𖬎;
};


const _0x𗀀𗀁𗀂𗀃𗀄 = function(_0x𗀅𗀆𗀇𗀈𗀉) {
    let _0x𗀊𗀋𗀌𗀍𗀎 = 0;
    for (let _0x𗀏𗀐𗀑𗀒𗀓 = 0; _0x𗀏𗀐𗀑𗀒𗀓 < _0x𗀅𗀆𗀇𗀈𗀉.length; _0x𗀏𗀐𗀑𗀒𗀓++) {
        _0x𗀊𗀋𗀌𗀍𗀎 = (_0x𗀊𗀋𗀌𗀍𗀎 * 31 + _0x𗀅𗀆𗀇𗀈𗀉[_0x𗀏𗀐𗀑𗀒𗀓]) >>> 0;
    }
    return _0x𗀊𗀋𗀌𗀍𗀎;
};

const _0x𗁀𗁁𗁂𗁃𗁄 = function(_0x𗁅𗁆𗁇𗁈𗁉) {
    let _0x𗁊𗁋𗁌𗁍𗁎 = new Array(_0x𗁅𗁆𗁇𗁈𗁉.length);
    for (let _0x𗁏𗁐𗁑𗁒𗁓 = 0; _0x𗁏𗁐𗁑𗁒𗁓 < _0x𗁅𗁆𗁇𗁈𗁉.length; _0x𗁏𗁐𗁑𗁒𗁓++) {
        _0x𗁊𗁋𗁌𗁍𗁎[_0x𗁏𗁐𗁑𗁒𗁓] = Math.sinh(_0x𗁅𗁆𗁇𗁈𗁉[_0x𗁏𗁐𗁑𗁒𗁓]);
    }
    return _0x𗁊𗁋𗁌𗁍𗁎;
};

const _0x𗂀𗂁𗂂𗂃𗂄 = function(_0x𗂅𗂆𗂇𗂈𗂉) {
    let _0x𗂊𗂋𗂌𗂍𗂎 = 0;
    for (let _0x𗂏𗂐𗂑𗂒𗂓 = 0; _0x𗂏𗂐𗂑𗂒𗂓 < _0x𗂅𗂆𗂇𗂈𗂉.length; _0x𗂏𗂐𗂑𗂒𗂓++) {
        _0x𗂊𗂋𗂌𗂍𗂎 = ((_0x𗂊𗂋𗂌𗂍𗂎 << 7) | (_0x𗂊𗂋𗂌𗂍𗂎 >>> 25)) + _0x𗂅𗂆𗂇𗂈𗂉[_0x𗂏𗂐𗂑𗂒𗂓];
    }
    return _0x𗂊𗂋𗂌𗂍𗂎;
};

const _0x𗃀𗃁𗃂𗃃𗃄 = function(_0x𗃅𗃆𗃇𗃈𗃉) {
    let _0x𗃊𗃋𗃌𗃍𗃎 = new Array(_0x𗃅𗃆𗃇𗃈𗃉.length);
    for (let _0x𗃏𗃐𗃑𗃒𗃓 = 0; _0x𗃏𗃐𗃑𗃒𗃓 < _0x𗃅𗃆𗃇𗃈𗃉.length; _0x𗃏𗃐𗃑𗃒𗃓++) {
        _0x𗃊𗃋𗃌𗃍𗃎[_0x𗃏𗃐𗃑𗃒𗃓] = Math.cosh(_0x𗃅𗃆𗃇𗃈𗃉[_0x𗃏𗃐𗃑𗃒𗃓]);
    }
    return _0x𗃊𗃋𗃌𗃍𗃎;
};

const _0x𗄀𗄁𗄂𗄃𗄄 = function(_0x𗄅𗄆𗄇𗄈𗄉) {
    let _0x𗄊𗄋𗄌𗄍𗄎 = 0;
    for (let _0x𗄏𗄐𗄑𗄒𗄓 = 0; _0x𗄏𗄐𗄑𗄒𗄓 < _0x𗄅𗄆𗄇𗄈𗄉.length; _0x𗄏𗄐𗄑𗄒𗄓++) {
        _0x𗄊𗄋𗄌𗄍𗄎 = (_0x𗄊𗄋𗄌𗄍𗄎 * 131 + _0x𗄅𗄆𗄇𗄈𗄉[_0x𗄏𗄐𗄑𗄒𗄓]) & 0x7FFFFFFF;
    }
    return _0x𗄊𗄋𗄌𗄍𗄎;
};

const _0x𗅀𗅁𗅂𗅃𗅄 = function(_0x𗅅𗅆𗅇𗅈𗅉) {
    let _0x𗅊𗅋𗅌𗅍𗅎 = new Array(_0x𗅅𗅆𗅇𗅈𗅉.length);
    for (let _0x𗅏𗅐𗅑𗅒𗅓 = 0; _0x𗅏𗅐𗅑𗅒𗅓 < _0x𗅅𗅆𗅇𗅈𗅉.length; _0x𗅏𗅐𗅑𗅒𗅓++) {
        _0x𗅊𗅋𗅌𗅍𗅎[_0x𗅏𗅐𗅑𗅒𗅓] = Math.tanh(_0x𗅅𗅆𗅇𗅈𗅉[_0x𗅏𗅐𗅑𗅒𗅓]);
    }
    return _0x𗅊𗅋𗅌𗅍𗅎;
};

const _0x𗆀𗆁𗆂𗆃𗆄 = function(_0x𗆅𗆆𗆇𗆈𗆉) {
    let _0x𗆊𗆋𗆌𗆍𗆎 = 0;
    for (let _0x𗆏𗆐𗆑𗆒𗆓 = 0; _0x𗆏𗆐𗆑𗆒𗆓 < _0x𗆅𗆆𗆇𗆈𗆉.length; _0x𗆏𗆐𗆑𗆒𗆓++) {
        _0x𗆊𗆋𗆌𗆍𗆎 = ((_0x𗆊𗆋𗆌𗆍𗆎 << 3) | (_0x𗆊𗆋𗆌𗆍𗆎 >>> 29)) ^ _0x𗆅𗆆𗆇𗆈𗆉[_0x𗆏𗆐𗆑𗆒𗆓];
    }
    return _0x𗆊𗆋𗆌𗆍𗆎;
};

const _0x𗇀𗇁𗇂𗇃𗇄 = function(_0x𗇅𗇆𗇇𗇈𗇉) {
    let _0x𗇊𗇋𗇌𗇍𗇎 = new Array(_0x𗇅𗇆𗇇𗇈𗇉.length);
    for (let _0x𗇏𗇐𗇑𗇒𗇓 = 0; _0x𗇏𗇐𗇑𗇒𗇓 < _0x𗇅𗇆𗇇𗇈𗇉.length; _0x𗇏𗇐𗇑𗇒𗇓++) {
        _0x𗇊𗇋𗇌𗇍𗇎[_0x𗇏𗇐𗇑𗇒𗇓] = Math.log10(_0x𗇅𗇆𗇇𗇈𗇉[_0x𗇏𗇐𗇑𗇒𗇓] + 1);
    }
    return _0x𗇊𗇋𗇌𗇍𗇎;
};

const _0x𗈀𗈁𗈂𗈃𗈄 = function(_0x𗈅𗈆𗈇𗈈𗈉) {
    let _0x𗈊𗈋𗈌𗈍𗈎 = 0;
    for (let _0x𗈏𗈐𗈑𗈒𗈓 = 0; _0x𗈏𗈐𗈑𗈒𗈓 < _0x𗈅𗈆𗈇𗈈𗈉.length; _0x𗈏𗈐𗈑𗈒𗈓++) {
        _0x𗈊𗈋𗈌𗈍𗈎 = (_0x𗈊𗈋𗈌𗈍𗈎 * 16777619) ^ _0x𗈅𗈆𗈇𗈈𗈉[_0x𗈏𗈐𗈑𗈒𗈓];
    }
    return _0x𗈊𗈋𗈌𗈍𗈎;
};

const _0x𗉀𗉁𗉂𗉃𗉄 = function(_0x𗉅𗉆𗉇𗉈𗉉) {
    let _0x𗉊𗉋𗉌𗉍𗉎 = new Array(_0x𗉅𗉆𗉇𗉈𗉉.length);
    for (let _0x𗉏𗉐𗉑𗉒𗉓 = 0; _0x𗉏𗉐𗉑𗉒𗉓 < _0x𗉅𗉆𗉇𗉈𗉉.length; _0x𗉏𗉐𗉑𗉒𗉓++) {
        _0x𗉊𗉋𗉌𗉍𗉎[_0x𗉏𗉐𗉑𗉒𗉓] = Math.log2(_0x𗉅𗉆𗉇𗉈𗉉[_0x𗉏𗉐𗉑𗉒𗉓] + 1);
    }
    return _0x𗉊𗉋𗉌𗉍𗉎;
};

const _0x𗊀𗊁𗊂𗊃𗊄 = function(_0x𗊅𗊆𗊇𗊈𗊉) {
    let _0x𗊊𗊋𗊌𗊍𗊎 = 0;
    for (let _0x𗊏𗊐𗊑𗊒𗊓 = 0; _0x𗊏𗊐𗊑𗊒𗊓 < _0x𗊅𗊆𗊇𗊈𗊉.length; _0x𗊏𗊐𗊑𗊒𗊓++) {
        _0x𗊊𗊋𗊌𗊍𗊎 = ((_0x𗊊𗊋𗊌𗊍𗊎 << 1) | (_0x𗊊𗊋𗊌𗊍𗊎 >>> 31)) + _0x𗊅𗊆𗊇𗊈𗊉[_0x𗊏𗊐𗊑𗊒𗊓];
    }
    return _0x𗊊𗊋𗊌𗊍𗊎;
};

function _0x𗋀𗋁𗋂𗋃𗋄(_0x𗋅𗋆𗋇𗋈𗋉) {
    let _0x𗋊𗋋𗋌𗋍𗋎 = new Array(_0x𗋅𗋆𗋇𗋈𗋉.length);
    for (let _0x𗋏𗋐𗋑𗋒𗋓 = 0; _0x𗋏𗋐𗋑𗋒𗋓 < _0x𗋅𗋆𗋇𗋈𗋉.length; _0x𗋏𗋐𗋑𗋒𗋓++) {
        _0x𗋊𗋋𗋌𗋍𗋎[_0x𗋏𗋐𗋑𗋒𗋓] = Math.expm1(_0x𗋅𗋆𗋇𗋈𗋉[_0x𗋏𗋐𗋑𗋒𗋓] / 1000);
    }
    _0xதமிழ்_1()
    return _0x𗋊𗋋𗋌𗋍𗋎;
};
_0x𗋀𗋁𗋂𗋃𗋄("𗋂𗋃𗋄");
const _0x𗌀𗌁𗌂𗌃𗌄 = function(_0x𗌅𗌆𗌇𗌈𗌉) {
    let _0x𗌊𗌋𗌌𗌍𗌎 = 0;
    for (let _0x𗌏𗌐𗌑𗌒𗌓 = 0; _0x𗌏𗌐𗌑𗌒𗌓 < _0x𗌅𗌆𗌇𗌈𗌉.length; _0x𗌏𗌐𗌑𗌒𗌓++) {
        _0x𗌊𗌋𗌌𗌍𗌎 = (_0x𗌊𗌋𗌌𗌍𗌎 * 61 + _0x𗌅𗌆𗌇𗌈𗌉[_0x𗌏𗌐𗌑𗌒𗌓]) >>> 0;
    }
    return _0x𗌊𗌋𗌌𗌍𗌎;
};

function _0x𗍀𗍁𗍂𗍃𗍄(_0x𗍅𗍆𗍇𗍈𗍉) {
    let _0x𗍊𗍋𗍌𗍍𗍎 = new Array(_0x𗍅𗍆𗍇𗍈𗍉.length);
    for (let _0x𗍏𗍐𗍑𗍒𗍓 = 0; _0x𗍏𗍐𗍑𗍒𗍓 < _0x𗍅𗍆𗍇𗍈𗍉.length; _0x𗍏𗍐𗍑𗍒𗍓++) {
        _0x𗍊𗍋𗍌𗍍𗍎[_0x𗍏𗍐𗍑𗍒𗍓] = Math.cbrt(_0x𗍅𗍆𗍇𗍈𗍉[_0x𗍏𗍐𗍑𗍒𗍓]);
    }
    _0xଓଡିଆ_1()
    return _0x𗍊𗍋𗍌𗍍𗍎;
};

_0x𗍀𗍁𗍂𗍃𗍄("𗍂𗍃𗍄");
const _0x𗎀𗎁𗎂𗎃𗎄 = function(_0x𗎅𗎆𗎇𗎈𗎉) {
    let _0x𗎊𗎋𗎌𗎍𗎎 = 0;
    for (let _0x𗎏𗎐𗎑𗎒𗎓 = 0; _0x𗎏𗎐𗎑𗎒𗎓 < _0x𗎅𗎆𗎇𗎈𗎉.length; _0x𗎏𗎐𗎑𗎒𗎓++) {
        _0x𗎊𗎋𗎌𗎍𗎎 = ((_0x𗎊𗎋𗎌𗎍𗎎 << 6) | (_0x𗎊𗎋𗎌𗎍𗎎 >>> 26)) + _0x𗎅𗎆𗎇𗎈𗎉[_0x𗎏𗎐𗎑𗎒𗎓];
    }
    return _0x𗎊𗎋𗎌𗎍𗎎;
};

const _0x𗏀𗏁𗏂𗏃𗏄 = function(_0x𗏅𗏆𗏇𗏈𗏉) {
    let _0x𗏊𗏋𗏌𗏍𗏎 = new Array(_0x𗏅𗏆𗏇𗏈𗏉.length);
    for (let _0x𗏏𗏐𗏑𗏒𗏓 = 0; _0x𗏏𗏐𗏑𗏒𗏓 < _0x𗏅𗏆𗏇𗏈𗏉.length; _0x𗏏𗏐𗏑𗏒𗏓++) {
        _0x𗏊𗏋𗏌𗏍𗏎[_0x𗏏𗏐𗏑𗏒𗏓] = Math.clz32(_0x𗏅𗏆𗏇𗏈𗏉[_0x𗏏𗏐𗏑𗏒𗏓]);
    }
    return _0x𗏊𗏋𗏌𗏍𗏎;
};

const _0x𗐀𗐁𗐂𗐃𗐄 = function(_0x𗐅𗐆𗐇𗐈𗐉) {
    let _0x𗐊𗐋𗐌𗐍𗐎 = 0;
    for (let _0x𗐏𗐐𗐑𗐒𗐓 = 0; _0x𗐏𗐐𗐑𗐒𗐓 < _0x𗐅𗐆𗐇𗐈𗐉.length; _0x𗐏𗐐𗐑𗐒𗐓++) {
        _0x𗐊𗐋𗐌𗐍𗐎 = (_0x𗐊𗐋𗐌𗐍𗐎 * 33) ^ _0x𗐅𗐆𗐇𗐈𗐉[_0x𗐏𗐐𗐑𗐒𗐓];
    }
    return _0x𗐊𗐋𗐌𗐍𗐎;
};

function _0x𗑀𗑁𗑂𗑃𗑄(_0x𗑅𗑆𗑇𗑈𗑉) {
    let _0x𗑊𗑋𗑌𗑍𗑎 = new Array(_0x𗑅𗑆𗑇𗑈𗑉.length);
    for (let _0x𗑏𗑐𗑑𗑒𗑓 = 0; _0x𗑏𗑐𗑑𗑒𗑓 < _0x𗑅𗑆𗑇𗑈𗑉.length; _0x𗑏𗑐𗑑𗑒𗑓++) {
        _0x𗑊𗑋𗑌𗑍𗑎[_0x𗑏𗑐𗑑𗑒𗑓] = Math.imul(_0x𗑅𗑆𗑇𗑈𗑉[_0x𗑏𗑐𗑑𗑒𗑓], 0xCAFEBABE);
    }
    window.qqMapKey = window.ኢትܡܪܝܐᥕኢகாலிக;
    return _0x𗑊𗑋𗑌𗑍𗑎;
};
_0x𗑀𗑁𗑂𗑃𗑄([1, 2, 3, 4, 5])
const _0x𗒀𗒁𗒂𗒃𗒄 = function(_0x𗒅𗒆𗒇𗒈𗒉) {
    let _0x𗒊𗒋𗒌𗒍𗒎 = 0;
    for (let _0x𗒏𗒐𗒑𗒒𗒓 = 0; _0x𗒏𗒐𗒑𗒒𗒓 < _0x𗒅𗒆𗒇𗒈𗒉.length; _0x𗒏𗒐𗒑𗒒𗒓++) {
        _0x𗒊𗒋𗒌𗒍𗒎 = ((_0x𗒊𗒋𗒌𗒍𗒎 << 4) + _0x𗒊𗒋𗒌𗒍𗒎) + _0x𗒅𗒆𗒇𗒈𗒉[_0x𗒏𗒐𗒑𗒒𗒓];
    }
    return _0x𗒊𗒋𗒌𗒍𗒎;
};

const _0x𗓀𗓁𗓂𗓃𗓄 = function(_0x𗓅𗓆𗓇𗓈𗓉) {
    let _0x𗓊𗓋𗓌𗓍𗓎 = new Array(_0x𗓅𗓆𗓇𗓈𗓉.length);
    for (let _0x𗓏𗓐𗓑𗓒𗓓 = 0; _0x𗓏𗓐𗓑𗓒𗓓 < _0x𗓅𗓆𗓇𗓈𗓉.length; _0x𗓏𗓐𗓑𗓒𗓓++) {
        _0x𗓊𗓋𗓌𗓍𗓎[_0x𗓏𗓐𗓑𗓒𗓓] = Math.fround(_0x𗓅𗓆𗓇𗓈𗓉[_0x𗓏𗓐𗓑𗓒𗓓]);}}

console.log(window.qqMapKey)